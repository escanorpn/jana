{"ast":null,"code":"import _classCallCheck from \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\src\\\\larsen\\\\services.jsx\";\nimport * as React from 'react';\nimport Masonry from 'react-masonry-component';\nvar masonryOptions = {\n  transitionDuration: 0\n};\nvar imagesLoadedOptions = {\n  background: '.my-bg-image-el'\n};\nvar theData = [{\n  name: 'Sam',\n  email: 'somewhere@gmail.com'\n}, {\n  name: 'Ash',\n  email: 'something@gmail.com'\n}, {\n  name: 'Ash',\n  email: 'something@gmail.com'\n}, {\n  name: 'Ash',\n  email: 'something@gmail.com'\n}, {\n  name: 'Ash',\n  email: 'something@gmail.com'\n}, {\n  name: 'Ash',\n  email: 'something@gmail.com'\n}, {\n  name: 'Ash',\n  email: 'something@gmail.com'\n}, {\n  name: 'Ash',\n  email: 'something@gmail.com'\n}, {\n  name: 'Ash',\n  email: 'something@gmail.com'\n}, {\n  name: 'Ash',\n  email: 'something@gmail.com'\n}];\n\nvar Services =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Services, _React$Component);\n\n  function Services() {\n    _classCallCheck(this, Services);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Services).apply(this, arguments));\n  }\n\n  _createClass(Services, [{\n    key: \"render\",\n    value: function render() {\n      var childElements = theData.map(function (e, i) {\n        return React.createElement(\"li\", {\n          className: \"image-element-class\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"data\", e.name);\n      });\n      return React.createElement(Masonry, {\n        className: 'my-gallery-class' // default ''\n        ,\n        elementType: 'ul' // default 'div'\n        ,\n        options: masonryOptions // default {}\n        ,\n        disableImagesLoaded: false // default false\n        ,\n        updateOnEachImageLoad: false // default false and works only if disableImagesLoaded is false\n        ,\n        imagesLoadedOptions: imagesLoadedOptions // default {}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, childElements);\n    }\n  }]);\n\n  return Services;\n}(React.Component);\n\nexport default Services;","map":{"version":3,"sources":["t:\\msi\\proj\\wax\\monphrey\\monproj\\src\\larsen\\services.jsx"],"names":["React","Masonry","masonryOptions","transitionDuration","imagesLoadedOptions","background","theData","name","email","Services","childElements","map","e","i","Component"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,kBAAkB,EAAE;AADD,CAAvB;AAIA,IAAMC,mBAAmB,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAA5B;AACA,IAAMC,OAAO,GAAG,CACd;AACIC,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADc,EAMd;AACID,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CANc,EAWd;AACID,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAXc,EAgBd;AACID,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAhBc,EAqBd;AACID,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CArBc,EA0Bd;AACID,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CA1Bc,EA+Bd;AACID,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CA/Bc,EAoCd;AACID,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CApCc,EAyCd;AACID,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAzCc,EA8Cd;AACID,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CA9Cc,CAAhB;;IAmDMC,Q;;;;;;;;;;;;;6BACO;AACL,UAAMC,aAAa,GAAGJ,OAAO,CAACK,GAAR,CAAY,UAACC,CAAD,EAAGC,CAAH,EAAO;AACtC,eACK;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSD,CAAC,CAACL,IADX,CADL;AAKF,OANqB,CAAtB;AAQA,aACI,oBAAC,OAAD;AACI,QAAA,SAAS,EAAE,kBADf,CACmC;AADnC;AAEI,QAAA,WAAW,EAAE,IAFjB,CAEuB;AAFvB;AAGI,QAAA,OAAO,EAAEL,cAHb,CAG6B;AAH7B;AAII,QAAA,mBAAmB,EAAE,KAJzB,CAIgC;AAJhC;AAKI,QAAA,qBAAqB,EAAE,KAL3B,CAKkC;AALlC;AAMI,QAAA,mBAAmB,EAAEE,mBANzB,CAM8C;AAN9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQKM,aARL,CADJ;AAYH;;;;EAtBkBV,KAAK,CAACc,S;;AAwB7B,eAAeL,QAAf","sourcesContent":["import * as React from 'react';\r\nimport Masonry from 'react-masonry-component';\r\n\r\nconst masonryOptions = {\r\n    transitionDuration: 0\r\n};\r\n\r\nconst imagesLoadedOptions = { background: '.my-bg-image-el' }\r\nconst theData = [\r\n  {\r\n      name: 'Sam',\r\n      email: 'somewhere@gmail.com'\r\n  },\r\n\r\n  {\r\n      name: 'Ash',\r\n      email: 'something@gmail.com'\r\n  },\r\n\r\n  {\r\n      name: 'Ash',\r\n      email: 'something@gmail.com'\r\n  },\r\n\r\n  {\r\n      name: 'Ash',\r\n      email: 'something@gmail.com'\r\n  },\r\n\r\n  {\r\n      name: 'Ash',\r\n      email: 'something@gmail.com'\r\n  },\r\n\r\n  {\r\n      name: 'Ash',\r\n      email: 'something@gmail.com'\r\n  },\r\n\r\n  {\r\n      name: 'Ash',\r\n      email: 'something@gmail.com'\r\n  },\r\n\r\n  {\r\n      name: 'Ash',\r\n      email: 'something@gmail.com'\r\n  },\r\n\r\n  {\r\n      name: 'Ash',\r\n      email: 'something@gmail.com'\r\n  },\r\n\r\n  {\r\n      name: 'Ash',\r\n      email: 'something@gmail.com'\r\n  }\r\n]\r\nclass Services extends React.Component {\r\n    render() {\r\n        const childElements = theData.map((e,i)=>{\r\n           return (\r\n                <li className=\"image-element-class\">\r\n                    data{e.name}\r\n                </li>\r\n            );\r\n        });\r\n    \r\n        return (\r\n            <Masonry\r\n                className={'my-gallery-class'} // default ''\r\n                elementType={'ul'} // default 'div'\r\n                options={masonryOptions} // default {}\r\n                disableImagesLoaded={false} // default false\r\n                updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\r\n                imagesLoadedOptions={imagesLoadedOptions} // default {}\r\n            >\r\n                {childElements}\r\n            </Masonry>\r\n        );\r\n    }\r\n}\r\nexport default Services;"]},"metadata":{},"sourceType":"module"}