{"ast":null,"code":"import _objectSpread from \"T:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"T:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"T:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"T:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"T:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"T:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"T:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"T:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\src\\\\larsen\\\\gallery.jsx\";\nimport React, { useState, useCallback } from \"react\"; // import { render } from \"react-dom\";\n\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport { photos } from \"./photos\";\n\nvar gallery =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(gallery, _React$Component);\n\n  function gallery() {\n    _classCallCheck(this, gallery);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(gallery).apply(this, arguments));\n  }\n\n  _createClass(gallery, [{\n    key: \"render\",\n    value: function render() {\n      var _useState = useState(0),\n          _useState2 = _slicedToArray(_useState, 2),\n          currentImage = _useState2[0],\n          setCurrentImage = _useState2[1];\n\n      var _useState3 = useState(false),\n          _useState4 = _slicedToArray(_useState3, 2),\n          viewerIsOpen = _useState4[0],\n          setViewerIsOpen = _useState4[1];\n\n      var openLightbox = useCallback(function (event, _ref) {\n        var photo = _ref.photo,\n            index = _ref.index;\n        setCurrentImage(index);\n        setViewerIsOpen(true);\n      }, []);\n\n      var closeLightbox = function closeLightbox() {\n        setCurrentImage(0);\n        setViewerIsOpen(false);\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Gallery, {\n        photos: photos,\n        onClick: openLightbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(ModalGateway, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, viewerIsOpen ? React.createElement(Modal, {\n        onClose: closeLightbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Carousel, {\n        currentIndex: currentImage,\n        views: photos.map(function (x) {\n          return _objectSpread({}, x, {\n            srcset: x.srcSet,\n            caption: x.title\n          });\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })) : null));\n    }\n  }]);\n\n  return gallery;\n}(React.Component);\n\nexport default gallery;","map":{"version":3,"sources":["T:\\msi\\proj\\wax\\monphrey\\monproj\\src\\larsen\\gallery.jsx"],"names":["React","useState","useCallback","Gallery","Carousel","Modal","ModalGateway","photos","gallery","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","event","photo","index","closeLightbox","map","x","srcset","srcSet","caption","title","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C,C,CACA;;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,IAAmBC,KAAnB,EAA0BC,YAA1B,QAA8C,cAA9C;AACA,SAASC,MAAT,QAAuB,UAAvB;;IAEMC,O;;;;;;;;;;;;;6BACE;AAAA,sBACkCP,QAAQ,CAAC,CAAD,CAD1C;AAAA;AAAA,UACCQ,YADD;AAAA,UACeC,eADf;;AAAA,uBAEkCT,QAAQ,CAAC,KAAD,CAF1C;AAAA;AAAA,UAECU,YAFD;AAAA,UAEeC,eAFf;;AAIN,UAAMC,YAAY,GAAGX,WAAW,CAAC,UAACY,KAAD,QAA6B;AAAA,YAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,YAAZC,KAAY,QAAZA,KAAY;AAC5DN,QAAAA,eAAe,CAACM,KAAD,CAAf;AACAJ,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAH+B,EAG7B,EAH6B,CAAhC;;AAKA,UAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BP,QAAAA,eAAe,CAAC,CAAD,CAAf;AACAE,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OAHD;;AAKA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAEL,MAAjB;AAAyB,QAAA,OAAO,EAAEM,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,YAAY,GACX,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAEM,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,YAAY,EAAER,YADhB;AAEE,QAAA,KAAK,EAAEF,MAAM,CAACW,GAAP,CAAW,UAAAC,CAAC;AAAA,mCACdA,CADc;AAEjBC,YAAAA,MAAM,EAAED,CAAC,CAACE,MAFO;AAGjBC,YAAAA,OAAO,EAAEH,CAAC,CAACI;AAHM;AAAA,SAAZ,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADW,GAWT,IAZN,CAFF,CADF;AAmBD;;;;EAlCqBvB,KAAK,CAACwB,S;;AAqC5B,eAAehB,OAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\n// import { render } from \"react-dom\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport { photos } from \"./photos\";\r\n\r\nclass gallery extends React.Component {\r\nrender(){\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = useCallback((event, { photo, index }) => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  }, []);\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Gallery photos={photos} onClick={openLightbox} />\r\n      <ModalGateway>\r\n        {viewerIsOpen ? (\r\n          <Modal onClose={closeLightbox}>\r\n            <Carousel\r\n              currentIndex={currentImage}\r\n              views={photos.map(x => ({\r\n                ...x,\r\n                srcset: x.srcSet,\r\n                caption: x.title\r\n              }))}\r\n            />\r\n          </Modal>\r\n        ) : null}\r\n      </ModalGateway>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default gallery;"]},"metadata":{},"sourceType":"module"}