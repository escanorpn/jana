{"ast":null,"code":"import _classCallCheck from \"T:\\\\msi\\\\proj\\\\react\\\\workspace\\\\f\\\\Internal_ibl_w\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"T:\\\\msi\\\\proj\\\\react\\\\workspace\\\\f\\\\Internal_ibl_w\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"T:\\\\msi\\\\proj\\\\react\\\\workspace\\\\f\\\\Internal_ibl_w\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"T:\\\\msi\\\\proj\\\\react\\\\workspace\\\\f\\\\Internal_ibl_w\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"T:\\\\msi\\\\proj\\\\react\\\\workspace\\\\f\\\\Internal_ibl_w\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"T:\\\\msi\\\\proj\\\\react\\\\workspace\\\\f\\\\Internal_ibl_w\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Form, Breadcrumb, Input, Button, Icon } from 'antd';\nimport { MDBCard, MDBCardBody, MDBCol, MDBRow } from \"mdbreact\";\nimport { Redirect } from 'react-router'; // const { MonthPicker, RangePicker } = DatePicker;\n\nvar axios = require('axios');\n\nvar residences = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  children: [{\n    value: 'hangzhou',\n    label: 'Hangzhou',\n    children: [{\n      value: 'xihu',\n      label: 'West Lake'\n    }]\n  }]\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  children: [{\n    value: 'nanjing',\n    label: 'Nanjing',\n    children: [{\n      value: 'zhonghuamen',\n      label: 'Zhong Hua Men'\n    }]\n  }]\n}];\n\nvar Shop1 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Shop1, _React$Component);\n\n  function Shop1() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Shop1);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Shop1)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      redirect: false\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, fieldsValue) {\n        if (err) {\n          return;\n        }\n\n        var values = {\n          fieldsValue: fieldsValue\n        };\n        console.log('Received values of form: ', values);\n        axios({\n          method: 'post',\n          // url: 'http://localhost/nw/vap/regApi.php?apicall=signup'\n          // url: 'http://localhost/nw/kq/api.php?apicall=signup',\n          url: 'http://192.168.43.87/d/php/api.php?apicall=signup',\n          data: values,\n          config: {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }\n        }).then(function (response) {\n          if (response.data.error) {\n            console.log(\"error \" + response.data.message);\n          } else {\n            _this.setState({\n              redirect: true\n            });\n\n            console.log(\"success \" + response.data.message);\n          }\n        }).catch(function (response) {\n          //handle error\n          console.log(\"error\" + response);\n        });\n      });\n    };\n\n    _this.handleWebsiteChange = function (value) {\n      var autoCompleteResult;\n\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(function (domain) {\n          return \"\".concat(value).concat(domain);\n        });\n      }\n\n      _this.setState({\n        autoCompleteResult: autoCompleteResult\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(Shop1, [{\n    key: \"render\",\n    value: function render() {\n      //const { getFieldDecorator } = this.props.form;\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldsError = _this$props$form.getFieldsError,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched;\n      var redirect = this.state.redirect;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/shop\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        color: \"white\",\n        text: \"black\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(MDBCardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Breadcrumb, {\n        separator: \">\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Breadcrumb.Item, {\n        href: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Grid\"), React.createElement(Breadcrumb.Item, {\n        href: \"about-us\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"about Center\"), React.createElement(Breadcrumb.Item, {\n        href: \"geo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Geo List\"), React.createElement(Breadcrumb.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"An Application\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"12\",\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        color: \"white\",\n        text: \"black\",\n        className: \"text-center\",\n        style: {\n          maxWidth: \"\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(MDBCardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, formItemLayout, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, \"First name\", React.createElement(Tooltip, {\n          title: \"Enter your first name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"question-circle-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, getFieldDecorator('fname', {\n        rules: [{\n          required: true,\n          message: 'Please input your nickname!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"Second name\", React.createElement(Tooltip, {\n          title: \"Enter your second name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"question-circle-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, getFieldDecorator('lname', {\n        rules: [{\n          required: true,\n          message: 'Please input your nickname!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"E-mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })))), React.createElement(MDBCol, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Password\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Confirm Password\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"Phone number\", React.createElement(Tooltip, {\n          title: \"Enter your phone number\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"question-circle-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, getFieldDecorator('pno', {\n        rules: [{\n          required: true,\n          message: 'Please input your Phone number!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        style: {\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Submit\")))))))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Shop1;\n}(React.Component);\n\nvar App = Form.create({\n  name: 'time_related_controls'\n})(Shop1);\nexport default App;","map":{"version":3,"sources":["T:\\msi\\proj\\react\\workspace\\f\\Internal_ibl_w\\src\\App.js"],"names":["React","Form","Breadcrumb","Input","Button","Icon","MDBCard","MDBCardBody","MDBCol","MDBRow","Redirect","axios","require","residences","value","label","children","Shop1","state","confirmDirty","autoCompleteResult","redirect","handleSubmit","e","preventDefault","props","form","validateFields","err","fieldsValue","values","console","log","method","url","data","config","headers","then","response","error","message","setState","catch","handleWebsiteChange","map","domain","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","formItemLayout","labelCol","xs","span","sm","wrapperCol","maxWidth","rules","required","whitespace","type","validator","color","marginLeft","marginRight","Component","App","create","name"],"mappings":";;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA0BC,KAA1B,EAAiCC,MAAjC,EAAwCC,IAAxC,QAAqD,MAArD;AAEA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,MAA/B,EAAuCC,MAAvC,QAAoD,UAApD;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CAEA;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEC,EAAAA,QAAQ,EAAE,CACR;AACEF,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,KAAK,EAAE,UAFT;AAGEC,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADQ;AAHZ,GADQ;AAHZ,CADiB,EAiBjB;AACED,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,QAAQ,EAAE,CACR;AACEF,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,KAAK,EAAE,SAFT;AAGEC,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADQ;AAHZ,GADQ;AAHZ,CAjBiB,CAAnB;;IAmCME,K;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,kBAAkB,EAAE,EAFd;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,K;;UAORC,Y,GAAe,UAAAC,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,YAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,WAAN,EAAsB;AACnD,YAAID,GAAJ,EAAS;AACP;AACD;;AACD,YAAME,MAAM,GAAG;AACbD,UAAAA,WAAW,EAAXA;AADa,SAAf;AAGAE,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACAnB,QAAAA,KAAK,CAAC;AACJsB,UAAAA,MAAM,EAAE,MADJ;AAEJ;AACA;AACAC,UAAAA,GAAG,EAAE,mDAJD;AAKJC,UAAAA,IAAI,EAAEL,MALF;AAMJM,UAAAA,MAAM,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAC,8BAAgB;AAAjB;AAAX;AANJ,SAAD,CAAL,CAQDC,IARC,CAQI,UAACC,QAAD,EAAc;AAElB,cAAGA,QAAQ,CAACJ,IAAT,CAAcK,KAAjB,EAAuB;AACrBT,YAAAA,OAAO,CAACC,GAAR,CAAY,WAASO,QAAQ,CAACJ,IAAT,CAAcM,OAAnC;AACC,WAFH,MAEO;AACH,kBAAKC,QAAL,CAAc;AACZrB,cAAAA,QAAQ,EAAE;AADE,aAAd;;AAIFU,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAWO,QAAQ,CAACJ,IAAT,CAAcM,OAArC;AACC;AAEJ,SApBC,EAqBDE,KArBC,CAqBK,UAAUJ,QAAV,EAAoB;AACvB;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAQO,QAApB;AACH,SAxBC;AAyBD,OAjCD;AAkCD,K;;UAGDK,mB,GAAsB,UAAA9B,KAAK,EAAI;AAC7B,UAAIM,kBAAJ;;AACA,UAAI,CAACN,KAAL,EAAY;AACVM,QAAAA,kBAAkB,GAAG,EAArB;AACD,OAFD,MAEO;AACLA,QAAAA,kBAAkB,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyByB,GAAzB,CAA6B,UAAAC,MAAM;AAAA,2BAAOhC,KAAP,SAAegC,MAAf;AAAA,SAAnC,CAArB;AACD;;AACD,YAAKJ,QAAL,CAAc;AAAEtB,QAAAA,kBAAkB,EAAlBA;AAAF,OAAd;AACD,K;;UACD2B,sB,GAAyB,UAACC,IAAD,EAAOlC,KAAP,EAAcmC,QAAd,EAA2B;AAAA,UAC1CvB,IAD0C,GACjC,MAAKD,KAD4B,CAC1CC,IAD0C;;AAElD,UAAIZ,KAAK,IAAIA,KAAK,KAAKY,IAAI,CAACwB,aAAL,CAAmB,UAAnB,CAAvB,EAAuD;AACrDD,QAAAA,QAAQ,CAAC,+CAAD,CAAR;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ;AACT;AACF,K;;UAEDE,sB,GAAyB,UAACH,IAAD,EAAOlC,KAAP,EAAcmC,QAAd,EAA2B;AAAA,UAC1CvB,IAD0C,GACjC,MAAKD,KAD4B,CAC1CC,IAD0C;;AAElD,UAAIZ,KAAK,IAAI,MAAKI,KAAL,CAAWC,YAAxB,EAAsC;AACpCO,QAAAA,IAAI,CAACC,cAAL,CAAoB,CAAC,SAAD,CAApB,EAAiC;AAAEyB,UAAAA,KAAK,EAAE;AAAT,SAAjC;AACD;;AACDH,MAAAA,QAAQ;AACT,K;;;;;;;6BAEI;AAEP;AAFO,6BAGsE,KAAKxB,KAAL,CAAWC,IAHjF;AAAA,UAGC2B,iBAHD,oBAGCA,iBAHD;AAAA,UAGoBC,cAHpB,oBAGoBA,cAHpB;AAAA,UAGoCC,aAHpC,oBAGoCA,aAHpC;AAAA,UAGmDC,cAHnD,oBAGmDA,cAHnD;AAAA,UAKCnC,QALD,GAKe,KAAKH,KALpB,CAKCG,QALD;AAMP,UAAMoC,cAAc,GAAG;AACrBC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADI;AAERC,UAAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE;AAAR;AAFI,SADW;AAKrBE,QAAAA,UAAU,EAAE;AACVH,UAAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADM;AAEVC,UAAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE;AAAR;AAFM;AALS,OAAvB;;AAWA,UAAIvC,QAAJ,EAAc;AACZ,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,OAAf;AAAuB,QAAA,IAAI,EAAC,OAA5B;AAAoC,QAAA,SAAS,EAAC,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,IAAI,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,IAAI,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,IAAI,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,CAFA,EASE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEF,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,SAAS,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,OAAf;AAAuB,QAAA,IAAI,EAAC,OAA5B;AAAoC,QAAA,SAAS,EAAC,aAA9C;AAA4D,QAAA,KAAK,EAAE;AAAC0C,UAAAA,QAAQ,EAAC;AAAV,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,oBAAUN,cAAV;AAA0B,QAAA,QAAQ,EAAE,KAAKnC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACV,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACU,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACE,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMC+B,iBAAiB,CAAC,OAAD,EAAU;AAC5BW,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBxB,UAAAA,OAAO,EAAE,6BAA3B;AAA0DyB,UAAAA,UAAU,EAAE;AAAtE,SAAD;AADqB,OAAV,CAAjB,CAEA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CAND,CADV,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZA,EAaM,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMKb,iBAAiB,CAAC,OAAD,EAAU;AAC5BW,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBxB,UAAAA,OAAO,EAAE,6BAA3B;AAA0DyB,UAAAA,UAAU,EAAE;AAAtE,SAAD;AADqB,OAAV,CAAjB,CAEA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CANL,CAbN,EAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBA,EAwBM,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGb,iBAAiB,CAAC,OAAD,EAAU;AAC1BW,QAAAA,KAAK,EAAE,CACL;AACEG,UAAAA,IAAI,EAAE,OADR;AAEE1B,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL;AACEwB,UAAAA,QAAQ,EAAE,IADZ;AAEExB,UAAAA,OAAO,EAAE;AAFX,SALK;AADmB,OAAV,CAAjB,CAWE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADH,CAxBN,CADU,EAwCV,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,UAAjB;AAA4B,QAAA,WAAW,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGY,iBAAiB,CAAC,UAAD,EAAa;AAC7BW,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBxB,UAAAA,OAAO,EAAE;AAA3B,SAAD,EACP;AAAC2B,UAAAA,SAAS,EAAE,KAAKjB;AAAjB,SADO;AADsB,OAAb,CAAjB,CAIC,oBAAC,KAAD;AACE,QAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAE;AAAEkB,YAAAA,KAAK,EAAE;AAAT,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADV;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJD,CADH,CAFN,EAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfA,EAgBA,oBAAC,IAAD,CAAM,IAAN;AAAY,QAAA,KAAK,EAAC,kBAAlB;AAAqC,QAAA,WAAW,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACShB,iBAAiB,CAAC,SAAD,EAAY;AAC5BW,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBxB,UAAAA,OAAO,EAAE;AAA3B,SAAD,EACP;AAAC2B,UAAAA,SAAS,EAAE,KAAKrB;AAAjB,SADO;AADqB,OAAZ,CAAjB,CAIC,oBAAC,KAAD;AACE,QAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAE;AAAEsB,YAAAA,KAAK,EAAE;AAAT,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADV;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJD,CADT,CAhBA,EA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BA,EA8BM,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACE,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKYhB,iBAAiB,CAAC,KAAD,EAAQ;AACjCW,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBxB,UAAAA,OAAO,EAAE,iCAA3B;AAA8DyB,UAAAA,UAAU,EAAE;AAA1E,SAAD;AAD0B,OAAR,CAAjB,CAEP,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFO,CALZ,CA9BN,EAuCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvCA,CAxCU,EAiFJ,oBAAC,IAAD,CAAM,IAAN;AACA,QAAA,KAAK,EAAE;AAACI,UAAAA,UAAU,EAAC,MAAZ;AAAmBC,UAAAA,WAAW,EAAC;AAA/B,SADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CAjFI,CAFF,CADF,CADF,CADF,CAFE,CATF,CADF,CAFA,EAoHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApHA,CADE;AA4HW;;;;EA1NOvE,KAAK,CAACwE,S;;AA4N1B,IAAMC,GAAG,GAAGxE,IAAI,CAACyE,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAA+C1D,KAA/C,CAAZ;AACA,eAAewD,GAAf","sourcesContent":["\n        \nimport React from \"react\";\nimport { Form, Breadcrumb,Input, Button,Icon, } from 'antd';\n\nimport { MDBCard, MDBCardBody, MDBCol, MDBRow} from \"mdbreact\";\nimport { Redirect } from 'react-router';\n\n// const { MonthPicker, RangePicker } = DatePicker;\nconst axios = require('axios');\nconst residences = [\n  {\n    value: 'zhejiang',\n    label: 'Zhejiang',\n    children: [\n      {\n        value: 'hangzhou',\n        label: 'Hangzhou',\n        children: [\n          {\n            value: 'xihu',\n            label: 'West Lake',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    value: 'jiangsu',\n    label: 'Jiangsu',\n    children: [\n      {\n        value: 'nanjing',\n        label: 'Nanjing',\n        children: [\n          {\n            value: 'zhonghuamen',\n            label: 'Zhong Hua Men',\n          },\n        ],\n      },\n    ],\n  },\n];\n\nclass Shop1 extends React.Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      redirect: false,\n    };\n  \n   \n    handleSubmit = e => {\n      e.preventDefault();\n  \n      this.props.form.validateFields((err, fieldsValue) => {\n        if (err) {\n          return;\n        }\n        const values = {\n          fieldsValue\n        };\n        console.log('Received values of form: ', values);\n        axios({\n          method: 'post',\n          // url: 'http://localhost/nw/vap/regApi.php?apicall=signup'\n          // url: 'http://localhost/nw/kq/api.php?apicall=signup',\n          url: 'http://192.168.43.87/d/php/api.php?apicall=signup',\n          data: values,\n          config: { headers: {'Content-Type': 'multipart/form-data' }}\n      })\n      .then((response) => {\n\n        if(response.data.error){\n          console.log(\"error \"+response.data.message);\n          }else{\n            this.setState({\n              redirect: true\n           });\n          \n          console.log(\"success \"+response.data.message);\n          }\n\n      })\n      .catch(function (response) {\n          //handle error\n          console.log(\"error\"+response)\n      });\n      });\n    };\n\n  \n    handleWebsiteChange = value => {\n      let autoCompleteResult;\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n      }\n      this.setState({ autoCompleteResult });\n    };\n    compareToFirstPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n  \n    validateToNextPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n    \nrender() {\n  \n  //const { getFieldDecorator } = this.props.form;\n  const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\n\n  const { redirect  } = this.state;\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n    },\n  };\n \n  if (redirect) {\n    return <Redirect to='/shop'/>;\n  }\n  return (\n<div>\n\n<MDBCard color=\"white\" text=\"black\" className=\"text-center\">\n  <MDBCardBody>\n\n  <Breadcrumb separator=\">\">\n    <Breadcrumb.Item href=\"grid\">Grid</Breadcrumb.Item>\n    <Breadcrumb.Item href=\"about-us\">about Center</Breadcrumb.Item>\n    <Breadcrumb.Item href=\"geo\">Geo List</Breadcrumb.Item>\n    <Breadcrumb.Item>An Application</Breadcrumb.Item>\n  </Breadcrumb>\n\n    <MDBRow >\n  \n  <MDBCol md=\"12\" className=\"mb-4\">\n    <MDBCard color=\"white\" text=\"black\" className=\"text-center\" style={{maxWidth:\"\"}}>\n      <MDBCardBody>\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n\n          <MDBRow >\n<MDBCol md=\"6\">\n          <Form.Item label={\n          <span>First name\n            <Tooltip title=\"Enter your first name\">\n              <Icon type=\"question-circle-o\" />\n            </Tooltip>\n          </span>\n        }>{getFieldDecorator('fname', {\n          rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n        })(<Input />)}\n        </Form.Item>\n\n<br />\n      <Form.Item label={\n          <span>Second name\n            <Tooltip title=\"Enter your second name\">\n              <Icon type=\"question-circle-o\" />\n            </Tooltip>\n          </span>\n        }>{getFieldDecorator('lname', {\n          rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n        })(<Input />)}\n      </Form.Item>\n<br /> \n      <Form.Item label=\"E-mail\">\n        {getFieldDecorator('email', {\n          rules: [\n            {\n              type: 'email',\n              message: 'The input is not valid E-mail!',\n            },\n            {\n              required: true,\n              message: 'Please input your E-mail!',\n            },\n          ],\n        })(<Input />)}\n      </Form.Item>\n</MDBCol> \n<MDBCol md=\"6\">   \n\n      <Form.Item label=\"Password\" hasFeedback>\n        {getFieldDecorator('password', {\n          rules: [{ required: true, message: 'Please input your Password!' },\n          {validator: this.validateToNextPassword,}],\n        })(\n          <Input\n            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />,\n        )}\n      </Form.Item>\n\n<br /> \n<Form.Item  label=\"Confirm Password\" hasFeedback>\n        {getFieldDecorator('confirm', {\n          rules: [{ required: true, message: 'Please confirm your password!' },\n          {validator: this.compareToFirstPassword,}],\n        })(\n          <Input\n            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />,\n        )}\n      </Form.Item>\n\n<br />\n      <Form.Item label={\n        <span>Phone number\n          <Tooltip title=\"Enter your phone number\">\n            <Icon type=\"question-circle-o\" />\n          </Tooltip>\n        </span>}>{getFieldDecorator('pno', {\n          rules: [{ required: true, message: 'Please input your Phone number!', whitespace: true }],\n        })(<Input />)}\n        </Form.Item>\n<br />\n</MDBCol>  \n      <Form.Item\n      style={{marginLeft:\"auto\",marginRight:\"auto\"}}\n      >\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item> \n      </MDBRow>\n    </Form>\n    </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n    </MDBRow>\n  </MDBCardBody>\n </MDBCard>\n\n<br />\n\n\n\n\n</div>\n       );\n            }}\n\nconst App = Form.create({ name: 'time_related_controls' })(Shop1);\nexport default App;"]},"metadata":{},"sourceType":"module"}