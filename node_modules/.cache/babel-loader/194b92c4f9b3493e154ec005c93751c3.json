{"ast":null,"code":"function invertNumber(min, max, num) {\n  return max + min - num;\n}\n\nfunction convertRange(oldMin, oldMax, newMin, newMax, oldValue) {\n  var percent = (oldValue - oldMin) / (oldMax - oldMin);\n  return percent * (newMax - newMin) + newMin;\n}\n\nfunction convertWidthToPx(width, containerWidth) {\n  if (typeof width === \"number\") {\n    return width;\n  }\n\n  if (typeof width !== \"string\") {\n    throw new Error(\"Received: \".concat(width, \" - Size must be a number or string\"));\n  }\n\n  if (width.substr(-1) === \"%\") {\n    var percent = 100 / Number(width.slice(0, -1));\n    return containerWidth / percent;\n  }\n\n  if (width.substr(-2) === \"px\") {\n    return Number(width.slice(0, -2));\n  }\n\n  return Number(width);\n}\n\nfunction convertWidthToString(width) {\n  if (typeof width === \"number\") {\n    return width + \"px\";\n  }\n\n  return width;\n}\n\nexport default {\n  invertNumber: invertNumber,\n  convertRange: convertRange,\n  convertWidthToPx: convertWidthToPx,\n  convertWidthToString: convertWidthToString\n};","map":{"version":3,"sources":["t:\\msi\\proj\\react\\workspace\\f\\Internal_ibl_w\\src\\pages\\utils.js"],"names":["invertNumber","min","max","num","convertRange","oldMin","oldMax","newMin","newMax","oldValue","percent","convertWidthToPx","width","containerWidth","Error","substr","Number","slice","convertWidthToString"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,GAAhC,EAAqC;AACnC,SAAQD,GAAG,GAAGD,GAAP,GAAcE,GAArB;AACD;;AAED,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,MAAtC,EAA8CC,MAA9C,EAAsDC,QAAtD,EAAgE;AAC9D,MAAMC,OAAO,GAAG,CAACD,QAAQ,GAAGJ,MAAZ,KAAuBC,MAAM,GAAGD,MAAhC,CAAhB;AACA,SAAOK,OAAO,IAAIF,MAAM,GAAGD,MAAb,CAAP,GAA8BA,MAArC;AACD;;AAED,SAASI,gBAAT,CAA0BC,KAA1B,EAAiCC,cAAjC,EAAiD;AAC/C,MAAG,OAAOD,KAAP,KAAiB,QAApB,EAA8B;AAC5B,WAAOA,KAAP;AACD;;AACD,MAAG,OAAOA,KAAP,KAAiB,QAApB,EAA8B;AAC5B,UAAM,IAAIE,KAAJ,qBAAuBF,KAAvB,wCAAN;AACD;;AACD,MAAGA,KAAK,CAACG,MAAN,CAAa,CAAC,CAAd,MAAqB,GAAxB,EAA6B;AAC3B,QAAML,OAAO,GAAG,MAAMM,MAAM,CAACJ,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAD,CAA5B;AACA,WAAOJ,cAAc,GAAGH,OAAxB;AACD;;AACD,MAAGE,KAAK,CAACG,MAAN,CAAa,CAAC,CAAd,MAAqB,IAAxB,EAA8B;AAC5B,WAAOC,MAAM,CAACJ,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAD,CAAb;AACD;;AACD,SAAOD,MAAM,CAACJ,KAAD,CAAb;AACD;;AAED,SAASM,oBAAT,CAA8BN,KAA9B,EAAqC;AACnC,MAAG,OAAOA,KAAP,KAAiB,QAApB,EAA8B;AAC5B,WAAOA,KAAK,GAAG,IAAf;AACD;;AACD,SAAOA,KAAP;AACD;;AAED,eAAe;AACbZ,EAAAA,YAAY,EAAZA,YADa;AAEbI,EAAAA,YAAY,EAAZA,YAFa;AAGbO,EAAAA,gBAAgB,EAAhBA,gBAHa;AAIbO,EAAAA,oBAAoB,EAApBA;AAJa,CAAf","sourcesContent":["function invertNumber(min, max, num) {\r\n  return (max + min) - num;\r\n}\r\n\r\nfunction convertRange(oldMin, oldMax, newMin, newMax, oldValue) {\r\n  const percent = (oldValue - oldMin) / (oldMax - oldMin);\r\n  return percent * (newMax - newMin) + newMin;\r\n}\r\n\r\nfunction convertWidthToPx(width, containerWidth) {\r\n  if(typeof width === \"number\") {\r\n    return width;\r\n  }\r\n  if(typeof width !== \"string\") {\r\n    throw new Error(`Received: ${width} - Size must be a number or string`);\r\n  }\r\n  if(width.substr(-1) === \"%\") {\r\n    const percent = 100 / Number(width.slice(0, -1));\r\n    return containerWidth / percent;\r\n  }\r\n  if(width.substr(-2) === \"px\") {\r\n    return Number(width.slice(0, -2));\r\n  }\r\n  return Number(width);\r\n}\r\n\r\nfunction convertWidthToString(width) {\r\n  if(typeof width === \"number\") {\r\n    return width + \"px\";\r\n  }\r\n  return width;\r\n}\r\n\r\nexport default {\r\n  invertNumber,\r\n  convertRange,\r\n  convertWidthToPx,\r\n  convertWidthToString\r\n};"]},"metadata":{},"sourceType":"module"}