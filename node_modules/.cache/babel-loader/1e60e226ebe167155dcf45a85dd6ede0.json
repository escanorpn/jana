{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/breadcrumb/style\";\nimport _Breadcrumb from \"antd/es/breadcrumb\";\nimport _defineProperty from \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"t:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\src\\\\larsen\\\\grid.jsx\";\nimport React from \"react\";\nimport { MDBCard, MDBCardBody, MDBCol, MDBRow, MDBIcon } from \"mdbreact\";\nimport { Redirect } from 'react-router';\nimport { Link } from \"react-router-dom\"; // const { MonthPicker, RangePicker } = DatePicker;\n\nvar axios = require('axios');\n\nvar Shop1 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Shop1, _React$Component);\n\n  function Shop1() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Shop1);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Shop1)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      redirect: false,\n      dbMessage: \"\"\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, fieldsValue) {\n        if (err) {\n          return;\n        }\n\n        var values = {\n          fieldsValue: fieldsValue\n        };\n        console.log('Received values of form: ', values);\n        axios({\n          method: 'post',\n          // url: 'http://localhost/nw/vap/regApi.php?apicall=signup'\n          url: 'http://localhost/nw/kq/api1.php?apicall=signup',\n          data: values,\n          config: {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }\n        }).then(function (response) {\n          if (response.data.error) {\n            console.log(\"error \" + response.data.message);\n\n            _this.setState({\n              dbMessage: response.data.message\n            });\n          } else if (response.data.message == \"Inserted\") {\n            _this.setState({\n              redirect: true,\n              dbMessage: response.data.message\n            });\n          } else {\n            _this.setState({\n              dbMessage: response.data.message\n            });\n\n            var result = response.data.message;\n            JSON.stringify(result);\n            console.log(\"success \" + JSON.stringify(result));\n          }\n        }).catch(function (response) {\n          //handle error\n          console.log(\"error\" + response);\n        });\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(Shop1, [{\n    key: \"render\",\n    value: function render() {\n      //const { getFieldDecorator } = this.props.form;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var redirect = this.state.redirect;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/geo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        style: _defineProperty({\n          width: \"95%\",\n          maxWidth: \"1000px\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          background: \"-moz-linear-gradient(315deg, #3f0d12 0%, #a71d31 74%)\"\n        }, \"background\", \"linear-gradient(315deg, #3f0d12 0%, #a71d31 74%)\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        color: \"white\",\n        text: \"black\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(MDBCardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        color: \"white\",\n        text: \"black\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(MDBCardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(_Breadcrumb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(_Breadcrumb.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"user-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Link, {\n        className: \"text-justify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"\\xA0Profile \\xA0\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"12\",\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        color: \"white\",\n        text: \"black\",\n        className: \"text-center\",\n        style: {\n          maxWidth: \"\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(MDBCardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        far: true,\n        icon: \"comment-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.state.dbMessage), React.createElement(_Form, Object.assign({}, formItemLayout, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"First name \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, getFieldDecorator('fname', {\n        rules: [{\n          required: true,\n          message: 'Please input your nickname!',\n          whitespace: true\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(_Form.Item, {\n        label: \"Second name \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, getFieldDecorator('lname', {\n        rules: [{\n          required: true,\n          message: 'Please input your nickname!',\n          whitespace: true\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(_Form.Item, {\n        label: \"E-mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })))), React.createElement(MDBCol, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"Password\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(_Form.Item, {\n        label: \"Confirm Password\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(_Form.Item, {\n        label: \"Phone number \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, getFieldDecorator('pno', {\n        rules: [{\n          type: 'number',\n          required: true,\n          message: 'Please input your Phone number!',\n          whitespace: true\n        }]\n      })(React.createElement(_InputNumber, {\n        formatter: function formatter(value) {\n          return \"+254 \".concat(value).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n        },\n        parser: function parser(value) {\n          return value.replace(/\\+254\\s?|(,*)/g, '');\n        },\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Sign up\")))))))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Shop1;\n}(React.Component);\n\nvar grid = _Form.create({\n  name: 'time_related_controls'\n})(Shop1);\n\nexport default grid;","map":{"version":3,"sources":["t:\\msi\\proj\\wax\\monphrey\\monproj\\src\\larsen\\grid.jsx"],"names":["React","MDBCard","MDBCardBody","MDBCol","MDBRow","MDBIcon","Redirect","Link","axios","require","Shop1","state","confirmDirty","autoCompleteResult","redirect","dbMessage","handleSubmit","e","preventDefault","props","form","validateFields","err","fieldsValue","values","console","log","method","url","data","config","headers","then","response","error","message","setState","result","JSON","stringify","catch","compareToFirstPassword","rule","value","callback","getFieldValue","validateToNextPassword","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","width","maxWidth","marginLeft","marginRight","background","color","rules","required","whitespace","type","validator","replace","Component","grid","create","name"],"mappings":"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","sourcesContent":["\r\n        \r\nimport React from \"react\";\r\nimport { Form, InputNumber,Input, Button,Icon,Tooltip,Breadcrumb } from 'antd';\r\n\r\nimport { MDBCard, MDBCardBody, MDBCol, MDBRow,MDBIcon} from \"mdbreact\";\r\nimport { Redirect } from 'react-router';\r\nimport {Link } from \"react-router-dom\";\r\n\r\n// const { MonthPicker, RangePicker } = DatePicker;\r\nconst axios = require('axios');\r\n\r\nclass Shop1 extends React.Component {\r\n    state = {\r\n      confirmDirty: false,\r\n      autoCompleteResult: [],\r\n      redirect: false,\r\n      dbMessage:\"\"\r\n    };\r\n  \r\n   \r\n    handleSubmit = e => {\r\n      e.preventDefault();\r\n  \r\n      this.props.form.validateFields((err, fieldsValue) => {\r\n        if (err) {\r\n          return;\r\n        }\r\n        const values = {\r\n          fieldsValue\r\n        };\r\n        console.log('Received values of form: ', values);\r\n        axios({\r\n          method: 'post',\r\n          // url: 'http://localhost/nw/vap/regApi.php?apicall=signup'\r\n          url: 'http://localhost/nw/kq/api1.php?apicall=signup',\r\n          data: values,\r\n          config: { headers: {'Content-Type': 'multipart/form-data' }}\r\n      })\r\n      .then((response) => {\r\n\r\n        if(response.data.error){\r\n          console.log(\"error \"+response.data.message);\r\n          this.setState({\r\n            dbMessage: response.data.message\r\n         });\r\n          }else if(response.data.message==\"Inserted\"){\r\n            this.setState({\r\n              redirect: true, \r\n              dbMessage: response.data.message\r\n           });\r\n\r\n          }else{\r\n            this.setState({\r\n              dbMessage: response.data.message\r\n           });\r\n          var result=response.data.message;\r\n          JSON.stringify(result)\r\n          console.log(\"success \"+JSON.stringify(result));\r\n          }\r\n\r\n      })\r\n      .catch(function (response) {\r\n          //handle error\r\n          console.log(\"error\"+response)\r\n      });\r\n      });\r\n    };\r\n\r\n  \r\n  \r\n    compareToFirstPassword = (rule, value, callback) => {\r\n      const { form } = this.props;\r\n      if (value && value !== form.getFieldValue('password')) {\r\n        callback('Two passwords that you enter is inconsistent!');\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n  \r\n    validateToNextPassword = (rule, value, callback) => {\r\n      const { form } = this.props;\r\n      if (value && this.state.confirmDirty) {\r\n        form.validateFields(['confirm'], { force: true });\r\n      }\r\n      callback();\r\n    };\r\n    \r\nrender() {\r\n  \r\n  //const { getFieldDecorator } = this.props.form;\r\n  const { getFieldDecorator,} = this.props.form;\r\n\r\n  const { redirect  } = this.state;\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 16 },\r\n    },\r\n  };\r\n \r\n  if (redirect) {\r\n    return <Redirect to='/geo'/>;\r\n  }\r\n  return (\r\n<div style={{width:\"95%\",maxWidth:\"1000px\",marginLeft:\"auto\",marginRight:\"auto\",background: \"-moz-linear-gradient(315deg, #3f0d12 0%, #a71d31 74%)\",background: \"linear-gradient(315deg, #3f0d12 0%, #a71d31 74%)\",}}>\r\n\r\n\r\n\r\n<MDBCard color=\"white\" text=\"black\" className=\"text-center\">\r\n  <MDBCardBody>\r\n  <MDBCard color=\"white\" text=\"black\" className=\"text-center\" >\r\n      <MDBCardBody>\r\n      <Breadcrumb>\r\n      <Breadcrumb.Item >\r\n      <MDBIcon icon=\"user-circle\" />\r\n        <Link  className=\"text-justify\">&nbsp;Profile &nbsp;</Link>\r\n      </Breadcrumb.Item>\r\n  </Breadcrumb>\r\n  </MDBCardBody>\r\n</MDBCard>\r\n<br/>\r\n \r\n    <MDBRow >\r\n  <MDBCol md=\"12\" className=\"mb-4\">\r\n    <MDBCard color=\"white\" text=\"black\" className=\"text-center\" style={{maxWidth:\"\"}}>\r\n      <MDBCardBody>\r\n        \r\n      <MDBIcon far icon=\"comment-alt\" /><span style={{color:\"red\"}}>\r\n   {this.state.dbMessage}\r\n  </span>\r\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n\r\n          <MDBRow >\r\n<MDBCol md=\"6\">\r\n          <Form.Item label={\"First name \"\r\n        }>{getFieldDecorator('fname', {\r\n          rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n        })(<Input />)}\r\n        </Form.Item>\r\n\r\n<br />\r\n      <Form.Item label={\r\n         \"Second name \"}>{getFieldDecorator('lname', {\r\n          rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n        })(<Input />)}\r\n      </Form.Item>\r\n<br /> \r\n      <Form.Item label=\"E-mail\">\r\n        {getFieldDecorator('email', {\r\n          rules: [\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ],\r\n        })(<Input />)}\r\n      </Form.Item>\r\n</MDBCol> \r\n<MDBCol md=\"6\">   \r\n\r\n      <Form.Item label=\"Password\" hasFeedback>\r\n        {getFieldDecorator('password', {\r\n          rules: [{ required: true, message: 'Please input your Password!' },\r\n          {validator: this.validateToNextPassword,}],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n\r\n<br /> \r\n<Form.Item  label=\"Confirm Password\" hasFeedback>\r\n        {getFieldDecorator('confirm', {\r\n          rules: [{ required: true, message: 'Please confirm your password!' },\r\n          {validator: this.compareToFirstPassword,}],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n\r\n<br />\r\n      <Form.Item label={\"Phone number \"\r\n         }>{getFieldDecorator('pno', {\r\n          rules: [{ type: 'number',required: true, message: 'Please input your Phone number!', whitespace: true }],\r\n        })(<InputNumber\r\n          formatter={value => `+254 ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n          parser={value => value.replace(/\\+254\\s?|(,*)/g, '')}\r\n          style={{width:\"100%\"}} \r\n           />)}\r\n        </Form.Item>\r\n<br />\r\n</MDBCol>  \r\n      <Form.Item\r\n      style={{marginLeft:\"auto\",marginRight:\"auto\"}}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Sign up\r\n        </Button>\r\n      </Form.Item> \r\n      </MDBRow>\r\n    </Form>\r\n    </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  </MDBCardBody>\r\n </MDBCard>\r\n\r\n<br />\r\n\r\n</div>\r\n       );\r\n            }}\r\n\r\nconst grid = Form.create({ name: 'time_related_controls' })(Shop1);\r\nexport default grid;"]},"metadata":{},"sourceType":"module"}