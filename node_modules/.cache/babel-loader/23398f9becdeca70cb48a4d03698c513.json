{"ast":null,"code":"import _objectSpread from \"T:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"T:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"T:\\\\msi\\\\proj\\\\wax\\\\monphrey\\\\monproj\\\\src\\\\larsen\\\\gallery.jsx\";\nimport React, { useState, useCallback } from \"react\";\nimport { render } from \"react-dom\";\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport { photos } from \"./photos\";\nimport { MDBCard, MDBCardBody } from \"mdbreact\";\n\nfunction App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentImage = _useState2[0],\n      setCurrentImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      viewerIsOpen = _useState4[0],\n      setViewerIsOpen = _useState4[1];\n\n  var openLightbox = useCallback(function (event, _ref) {\n    var photo = _ref.photo,\n        index = _ref.index;\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  var closeLightbox = function closeLightbox() {\n    if (viewerIsOpen) {\n      // alert(viewerIsOpen);\n      setCurrentImage(0);\n      setViewerIsOpen(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    onClick: closeLightbox,\n    style: {\n      paddingTop: \"22px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Gallery, {\n    photos: photos,\n    onClick: openLightbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(ModalGateway, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, viewerIsOpen ? React.createElement(Modal, {\n    onClose: closeLightbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(MDBCard, {\n    color: \"white\",\n    text: \"black\",\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(MDBCardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Carousel, {\n    currentIndex: currentImage,\n    views: photos.map(function (x) {\n      return _objectSpread({}, x, {\n        srcset: x.srcSet,\n        caption: x.title\n      });\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })))) : null));\n} // render(<App />, document.getElementById(\"app\"));\n\n\nexport default App;","map":{"version":3,"sources":["T:\\msi\\proj\\wax\\monphrey\\monproj\\src\\larsen\\gallery.jsx"],"names":["React","useState","useCallback","render","Gallery","Carousel","Modal","ModalGateway","photos","MDBCard","MDBCardBody","App","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","event","photo","index","closeLightbox","paddingTop","map","x","srcset","srcSet","caption","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,IAAmBC,KAAnB,EAA0BC,YAA1B,QAA8C,cAA9C;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAoC,UAApC;;AACA,SAASC,GAAT,GAAe;AAAA,kBAC2BV,QAAQ,CAAC,CAAD,CADnC;AAAA;AAAA,MACNW,YADM;AAAA,MACQC,eADR;;AAAA,mBAE2BZ,QAAQ,CAAC,KAAD,CAFnC;AAAA;AAAA,MAENa,YAFM;AAAA,MAEQC,eAFR;;AAIb,MAAMC,YAAY,GAAGd,WAAW,CAAC,UAACe,KAAD,QAA6B;AAAA,QAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,QAAZC,KAAY,QAAZA,KAAY;AAC5DN,IAAAA,eAAe,CAACM,KAAD,CAAf;AACAJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAH+B,EAG7B,EAH6B,CAAhC;;AAKA,MAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAExB,QAAGN,YAAH,EAAgB;AACd;AACAD,MAAAA,eAAe,CAAC,CAAD,CAAf;AACAE,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACJ,GAPD;;AASA,SACE;AAAK,IAAA,OAAO,EAAEK,aAAd;AAA6B,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEb,MAAjB;AAAyB,IAAA,OAAO,EAAEQ,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,YAAY,GACX,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEM,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,OAAf;AAAuB,IAAA,IAAI,EAAC,OAA5B;AAAoC,IAAA,SAAS,EAAC,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACR,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,QAAD;AACE,IAAA,YAAY,EAAER,YADhB;AAEE,IAAA,KAAK,EAAEJ,MAAM,CAACc,GAAP,CAAW,UAAAC,CAAC;AAAA,+BACdA,CADc;AAEjBC,QAAAA,MAAM,EAAED,CAAC,CAACE,MAFO;AAGjBC,QAAAA,OAAO,EAAEH,CAAC,CAACI;AAHM;AAAA,KAAZ,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CADQ,CADJ,CADW,GAcT,IAfN,CAFF,CADF;AAsBD,C,CACD;;;AAEA,eAAgBhB,GAAhB","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport { photos } from \"./photos\";\r\n\r\nimport { MDBCard, MDBCardBody} from \"mdbreact\";\r\nfunction App() {\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = useCallback((event, { photo, index }) => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  }, []);\r\n\r\n  const closeLightbox = () => {\r\n    \r\n      if(viewerIsOpen){\r\n        // alert(viewerIsOpen);\r\n        setCurrentImage(0);\r\n        setViewerIsOpen(false);\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div onClick={closeLightbox} style={{paddingTop:\"22px\"}}>\r\n      <Gallery photos={photos} onClick={openLightbox} />\r\n      <ModalGateway>\r\n        {viewerIsOpen ? (\r\n          <Modal onClose={closeLightbox}>\r\n              <MDBCard color=\"white\" text=\"black\" className=\"text-center\" >\r\n      <MDBCardBody>\r\n            <Carousel\r\n              currentIndex={currentImage}\r\n              views={photos.map(x => ({\r\n                ...x,\r\n                srcset: x.srcSet,\r\n                caption: x.title\r\n              }))}\r\n            />\r\n            </MDBCardBody></MDBCard>\r\n          </Modal>\r\n        ) : null}\r\n      </ModalGateway>\r\n    </div>\r\n  );\r\n}\r\n// render(<App />, document.getElementById(\"app\"));\r\n\r\nexport default  App;"]},"metadata":{},"sourceType":"module"}